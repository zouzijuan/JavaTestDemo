-- 创建数据库
create database if not exists class character set utf8mb4;
-- 使用数据库
use class;

-- 创建考试成绩表
DROP TABLE IF EXISTS exam_result;
CREATE TABLE exam_result (
id INT,
name VARCHAR(20),
chinese DECIMAL(3,1),
math DECIMAL(3,1),
english DECIMAL(3,1)
);
-- 插入测试数据
INSERT INTO exam_result (id,name, chinese, math, english) VALUES
(1,'唐三藏', 67, 98, 56),
(2,'孙悟空', 87.5, 78, 77),
(3,'猪悟能', 88, 98.5, 90),
(4,'曹孟德', 82, 84, 67),
(5,'刘玄德', 55.5, 85, 45),
(6,'孙权', 70, 73, 78.5),
(7,'宋公明', 75, 65, 30);

-- 全列查询 
SELECT * FROM exam_result;
 
-- 指定列查询
SELECT id,name,english FROM exam_result;

-- 查询字段为表达式
SELECT id,name,chinese+math+english FROM exam_result;

-- 结果集中，表头的列名=别名
SELECT id,name,chinese+math+english 总分 FROM exam_result;

-- 去重
SELECT DISTINCT math FROM exam_result;

-- 排序
-- asc为升序，desc为降序，默认为asc
-- 按数学成绩进行排序
SELECT * FROM exam_result order by math asc;

-- 插入几条考试成绩数据到exam_result
insert into exam_result values(8,'林黛玉',87.5,77,92);
insert into exam_result values(9,'贾宝玉',67,52,60);
insert into exam_result values(10,'薛宝钗',88,66,70);

-- 按照总成绩降序排序
-- 如果总成绩相同，按照语文成绩升序排序
-- 如果语文相同，按照英语降序排序
-- 总成绩别名total_score
SELECT id,name,chinese+english+math total_score from exam_result
 order by total_score desc,chinese,english desc;

-- 条件查询:WHERE
-- 模糊匹配。%表示任意多个（包括0个）任意字符;_表示任意一个字符
select * from exam_result where name like '孙%';
select * from exam_result where name like '孙_';

-- IN
-- 查询数学成绩是50或者65分的同学的数据
select * from exam_result where math in (50,65);

-- BETWEEN…AND…
-- 查询语文成绩在[80，90]分的同学及语文成绩
select name,chinese from exam_result where chinese BETWEEN 80 AND 90;






-- 图书借阅信息表
drop table if exists record;
create table record
(
name varchar(20),
start_time timestamp default now(),
end_time timestamp default now()
);

-- MySQL默认日期格式：yyyy-MM-dd HH:mm:ss
insert into record values('孙悟空','2020-04-01 14:00:00','2020-04-19 00:00:00');
insert into record values('猪八戒','2020-04-10 14:00:00','2020-04-23 00:00:00');
insert into record values('唐三藏','2020-04-20 14:00:00','2020-04-22 00:00:00');
insert into record values('沙悟净','2020-04-18 14:00:00','2020-04-19 00:00:00');

-- 查询一个[a,b],a代表查询的起始日期，b代结束日期.
-- 2020-04-05 00:00:00到2020-04-17 00：00:00
select * from record where '2020-04-17 00:00:00'>=start_time and '2020-04-05 00:00:00'<=end_time;





-- 分页查询
-- 按id进行分页，每页3条记录，分别显示1，2，3页
-- 第1页
select * from exam_result order by id limit 3;
-- 第2页
select * from exam_result order by id limit 3 offset 3;
-- 第3页
select * from exam_result order by id limit 3 offset 6;

-- 查询语文成绩第二名的分数
select * from exam_result order by chinese desc limit 1,1;





